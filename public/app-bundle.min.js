var app=angular.module("app",["ngRoute","firebase","ngAnimate","toastr"]);app.run(["$rootScope","$location",function(a,b){a.$on("$routeChangeError",function(a,c,d,e){"AUTH_REQUIRED"===e&&b.path("/login"),"NOT_AUTHORIZED"===e&&b.path("/home")})}]),app.config(["$routeProvider",function(a){var b={requireAdmin:["$firebaseAuthService","routeAuth",function(a,b){return a.$waitForAuth().then(function(){return console.log("checking route"),b.requireAdmin()})}],sessions:["$firebaseAuthService","fbRef","sessionCollection",function(a,b,c){return a.$requireAuth().then(function(){var a=b.getSessionsRef();return c(a).$loaded()})}],sessionsByVote:["$firebaseAuthService","fbRef","sessionCollection",function(a,b,c){return a.$requireAuth().then(function(){var a=b.getSessionsRef().orderByChild("voteCount");return c(a).$loaded()})}],reviewedSessions:["$firebaseAuthService","fbRef","sessionCollection",function(a,b,c){return a.$requireAuth().then(function(){var a=b.getReviewedSessionsRef();return c(a).$loaded()})}]};a.when("/admin/login",{template:'<admin-login current-auth="$resolve.currentAuth"></admin-login>',resolve:{currentAuth:["$firebaseAuthService",function(a){return a.$waitForAuth()}]}}).when("/admin/home",{template:'<admin-home sessions="$resolve.sessions" reviewed-sessions="$resolve.reviewedSessions"></admin-home>',resolve:{admin:b.requireAdmin,sessions:b.sessionsByVote,reviewedSessions:b.reviewedSessions}}).when("/home",{template:'<home reviewed-sessions="$resolve.reviewedSessions" sessions="$resolve.sessions" user-sessions="$resolve.userSessions"></home>',resolve:{userSessions:["$firebaseAuthService","fbRef","$firebaseArray",function(a,b,c){return a.$requireAuth().then(function(){var a=b.getUserSessionsRef().orderByChild("title");return c(a).$loaded()})}],sessions:b.sessions,reviewedSessions:b.reviewedSessions}}).when("/admin/createusers",{template:'<admin-create-users reviewed-sessions="$resolve.reviewedSessions" sessions="$resolve.sessions" users="$resolve.users"></admin-create-users>',resolve:{users:["$firebaseAuthService","fbRef","$firebaseArray",function(a,b,c){return a.$requireAuth().then(function(){var a=b.getUsersRef().orderByChild("firstName");return c(a).$loaded()})}],admin:b.requireAdmin,sessions:b.sessions,reviewedSessions:b.reviewedSessions}}).when("/profile",{template:'<profile user-data="$resolve.userData" reviewed-sessions="$resolve.reviewedSessions" sessions="$resolve.sessions" ></home>',resolve:{userData:function(a,b,c){return a.$requireAuth().then(function(){var a=b.getUserRef();return c(a).$loaded()})},sessions:b.sessions,reviewedSessions:b.reviewedSessions}}).when("/createsession",{template:'<create-new-session user-profile="$resolve.userProfile" reviewed-sessions="$resolve.reviewedSessions" user-sessions="$resolve.userSessions" sessions="$resolve.sessions"></create-new-session>',resolve:{userSessions:["$firebaseAuthService","fbRef","$firebaseArray",function(a,b,c){return a.$requireAuth().then(function(){var a=b.getUserSessionsRef().orderByChild("title");return c(a).$loaded()})}],sessions:b.sessions,reviewedSessions:b.reviewedSessions,userProfile:["$firebaseAuthService","fbRef","$firebaseObject",function(a,b,c){return a.$requireAuth().then(function(){var a=b.getUserRef();return c(a).$loaded()})}]}}).when("/login",{template:'<login current-auth="$resolve.currentAuth"></login>',resolve:{currentAuth:["$firebaseAuthService",function(a){return a.$waitForAuth()}]}}).when("/logout",{template:"<logout></logout>"}).otherwise("/home")}]),angular.module("app").component("adminLogin",{templateUrl:"/admin/login.html",bindings:{currentAuth:"="},controller:["$firebaseAuthService","$location","toastr",function(a,b,c){this.loggedIn=!!this.currentAuth,this.loggedIn&&b.path("/home"),this.login=function(){a.$authWithPassword({email:this.email,password:this.password}).then(function(a){b.path("/admin/home")}.bind(this))["catch"](function(a){c.error(a)}.bind(this))}}]}),angular.module("app").component("adminHome",{templateUrl:"/admin/home.html",bindings:{sessions:"=",reviewedSessions:"="},controller:function(){this.sessionsByVoteDesc=this.sessions.reverse()}}),angular.module("app").component("adminCreateUsers",{templateUrl:"/admin/createUsers.html",bindings:{users:"=",sessions:"=",reviewedSessions:"="},controller:["parseNames","$firebaseAuthService","$firebaseRef","$firebaseObject","toastr",function(a,b,c,d,e){var f=d(c["default"].child("users"));this["import"]=function(){var c=a(this.namesblob);c.forEach(function(a){console.log(a),b.$createUser({email:a.email,password:"pass"}).then(function(b){f[b.uid]=a,console.log(f),f.$save()})["catch"](function(b){e.error("User already exists: "+a.email)}.bind(this))}.bind(this)),e.success("Users Created!")}}]}),angular.module("app").service("parseNames",function(){return function(a){var b=a.split(/\r?\n/);return b.forEach(function(a,c){var d=a.split("|");b[c]={email:d[0],firstName:d[1],lastName:d[2]}}),b}}),angular.module("app").factory("fbRef",["$firebaseRef","$firebaseAuthService",function(a,b){return{getUsersRef:function(){return a["default"].child("users")},getUserRef:function(){return a["default"].child("users").child(b.$getAuth().uid)},getUserSessionsRef:function(){return a["default"].child("userSessions").child(b.$getAuth().uid)},getReviewedSessionsRef:function(){return a["default"].child("reviewedSessions").child(b.$getAuth().uid)},getSessionsRef:function(){return a["default"].child("sessions")}}}]),angular.module("app").config(["$firebaseRefProvider",function(a){a.registerUrl("http://ng-lightning-voter.firebaseio.com")}]),angular.module("app").component("nav",{templateUrl:"/nav/nav.html",bindings:{sessions:"=",reviewedSessions:"="},controller:["$firebaseAuthService","$firebaseObject","fbRef",function(a,b,c){this.currentUser=b(c.getUserRef()),this.getUnreviewedSessionsCount=function(){return this.sessions.getUnreviewedCount(a.$getAuth().uid,this.reviewedSessions)}}]}),angular.module("app").component("logout",{controller:["$firebaseAuthService","$location",function(a,b){a.$unauth(),b.path("/login")}]}),angular.module("app").component("login",{templateUrl:"/security/login.html",bindings:{currentAuth:"="},controller:["$firebaseAuthService","$firebaseRef","$location","$firebaseObject","toastr",function(a,b,c,d,e){this.loggedIn=!!this.currentAuth,this.loggedIn&&c.path("/home"),this.login=function(){a.$authWithPassword({email:this.email,password:"pass"}).then(function(){c.path("/home")}.bind(this))["catch"](function(a){e.error(a)}.bind(this))}}]});